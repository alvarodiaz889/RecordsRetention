<div style="width: 50%; margin: 0 auto;">

    <div class="modal-header">
        <h3 class="section-title capitalize">Governing Regulations</h3>
    </div>

    <script>
        function OnRequestEnd(e) {
            if (e.type == "update" || e.type == "create" || e.type == "remove") {
                $("#advice").hide();
                $("#grid").data("kendoGrid").dataSource.read();
            }
        }

        function OnRemove(e) {
            e.preventDefault();
            var name = 'governingRegulationsId';
            var id = e.model.Id;
            $.post("@Url.Action("RecordExist", "Schedule")", { name: name, id: id }, function (data) {
                if (data) {
                    $("#advice").show();
                    $("#grid").data("kendoGrid").dataSource.read();
                } else
                {
                    $.post("@Url.Action("DestroyGoverningRegulationAsync", "Main")", { id: id }, function (data) { });
                    $("#advice").hide();
                    setTimeout(function () { $("#grid").data("kendoGrid").dataSource.read(); }, 3000);
                }
            });
        }

    </script>

    <hr />
    <div>
        @(Html.Kendo().Grid<IUERM_RRS.ViewModels.IdNameViewModel>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(o => o.Id).HtmlAttributes(new { @style = "vertical-align: top;" }).Visible(false);
                    columns.Bound(o => o.Name).HtmlAttributes(new { @style = "vertical-align: top;" });
                    columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" "); command.Destroy().Text(" "); }).Width(100);
                })
                .Scrollable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .ServerOperation(true)
                    .Model(model => model.Id(o => o.Id))
                    .Read(read => read.Action("ReadGoverningRegulation", "Main"))
                    .Destroy(destroy => destroy.Action("DestroyGoverningRegulation", "Main"))
                    .Update(update => update.Action("UpdateGoverningRegulation", "Main"))
                    .Create(create => create.Action("CreateGoverningRegulation", "Main"))
                    .Events(e => e.RequestEnd("OnRequestEnd"))
                    )
                .Sortable()
                .Filterable()
                .ToolBar(toolbar => { toolbar.Create().Text("Add"); toolbar.Excel().Text("Export"); })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                .NoRecords("No Records.")
                .Excel(excel => excel.FileName("GoverningRegulations.xlsx").Filterable(true).AllPages(true))
                .Events(e => e.Remove("OnRemove"))
        )
    </div>
    <span id="advice" style="color:red;display:none;"> This value is currently used in one or more Record Retention Schedule(s) and can't be removed.</span>
    <br/>
</div>
    
