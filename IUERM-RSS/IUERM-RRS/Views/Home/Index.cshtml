<div style="width: 80%; margin: 100px auto 100px; min-height:600px;">
    <h3 class="section-title capitalize">RECORDS RETENTION SCHEDULE</h3>

    
    <input type="checkbox" checked="@ViewBag.Checked" onclick="ChangeView(this);" /><label>Advanced View</label>

    @(Html.Kendo().Grid<IUERM_RRS.ViewModels.ScheduleViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.SCH_StewardDomain).Width(200)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_StewardDomain")).HtmlAttributes(new { @style = "text-align:left" }); ;
            columns.Bound(c => c.SCH_RetentionArea).Width(200)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionArea")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RetentionSubArea).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionSubArea")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_AreaScope).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_AreaScopeId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RetentionAreaDescription).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionAreaDescription")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Type).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Type")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Office).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_OfficeId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Coordinator).Width(200)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Coordinator")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RecordSeries).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordSeries")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RecordSeriesCode).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordSeriesCode")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Description).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Description")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Retention).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_EventCode).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_EventCodeId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Years).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Years")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_IsActive).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Active")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_IsVital).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Vital")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_GoverningStatute).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningStatutesId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_GoverningRegulation).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningRegulationsId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_GoverningPolicy).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningPoliciesId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Reason).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Reason")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RecordMedium).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordMediumId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Retainer).Width(300)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetainerId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_Disposition).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_DispositionId")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_RequiresDestruction).Width(150)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RquiresCertDestruction")).HtmlAttributes(new { @style = "text-align:left" });
            columns.Bound(c => c.SCH_CreationDate2).Width(250)
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_CreationDate")).HtmlAttributes(new { @style = "text-align:left" });
        })
        .ToolBar(toolbar =>
        {
            toolbar.Excel();
            toolbar.Pdf();
        })
        .Pageable(p => p.PreviousNext(true))
        .Filterable()
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.SingleColumn);
        })
        .Scrollable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("Schedules_Read", "Home"))
        )
        .Events(e => e.DataBound("onDataBound"))
        .HtmlAttributes(new { @style = "height: 600px;" })
    )
</div>
<script type="text/javascript">
    function ChangeView(e)
    {
        var checked = e.checked;
        window.location.href = "/Home/AdvancedView/?check=" + checked;
    }

    function onDataBound() {
        var grid = $("#grid").data("kendoGrid");
        for (var i = 0; i < grid.columns.length; i++) {
            grid.autoFitColumn(i);
        }
    }
</script>