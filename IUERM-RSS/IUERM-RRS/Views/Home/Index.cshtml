<div style="width: 80%; margin: 100px auto 100px; min-height:600px;">
    <h3 class="section-title capitalize">RECORDS RETENTION SCHEDULE</h3>

    
    <input type="checkbox" checked="@ViewBag.Checked" onclick="ChangeView(this);" /><label>Advanced View</label>
    @*<input type="checkbox" onclick="ChangeView2();" />*@

    @(Html.Kendo().Grid<IUERM_RRS.ViewModels.ScheduleViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.SCH_StewardDomain).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_StewardDomain")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RetentionArea).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionArea")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RetentionSubArea).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionSubArea")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_AreaScope).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_AreaScopeId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RetentionAreaDescription).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionAreaDescription")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Type).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Type")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Office).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_OfficeId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Coordinator).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Coordinator")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RecordSeries).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordSeries")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RecordSeriesCode).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordSeriesCode")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Description).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Description")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Retention).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetentionId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_EventCode).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_EventCodeId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Years).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Years")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_IsVital).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Vital")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_GoverningStatute)
                .ClientTemplate("#=SCH_GoverningStatute#").Width(200).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningStatutesId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_GoverningRegulation)
                .ClientTemplate("#=SCH_GoverningRegulation#").Width(200).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningRegulationsId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_GoverningPolicy)
                .ClientTemplate("#=SCH_GoverningPolicy#").Width(200).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_GoverningPoliciesId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Reason).Width(200).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_Reason")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RecordMedium).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RecordMediumId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Retainer).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RetainerId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_Disposition).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_DispositionId")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_RequiresDestruction).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_RquiresCertDestruction")).HtmlAttributes(new { @class = "grid-column" });
            columns.Bound(c => c.SCH_CreationDate2).Width(150).HeaderHtmlAttributes(new { @class = "grid-header" })
                .Visible(ScheduleViewModel.IsColumnVisible("SCH_CreationDate")).HtmlAttributes(new { @class = "grid-column" });
        })
        .ToolBar(toolbar =>
        {
            toolbar.Excel();
            toolbar.Pdf();
        })
        .Pageable(p => p.PreviousNext(true))
        .Filterable()
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.SingleColumn);
        })
        .Scrollable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("Schedules_Read", "Home"))
        )
        .HtmlAttributes(new { @style = "height: 600px;" })
        .Excel(excel => excel
            .FileName("Schedule.xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("Excel_Export_Save", "Home")))
        .Events(e => e.ExcelExport("OnExcelExport"))
    )
</div>
<script type="text/javascript">
    function ChangeView(e)
    {
        var checked = e.checked;
        window.location.href = "/Home/AdvancedView/?check=" + checked;
    }
    //function ChangeView(e) {
    //    var checked = e.checked;
    //    window.location.href = "/Schedule/FileDemo"
    //}
    @*function OnExcelExport(e)
    {
        e.preventDefault();

        // Get the Excel file as a data URL.
        var dataURL = new kendo.ooxml.Workbook(e.workbook).toDataURL();
        // Strip the data URL prologue.
        var base64 = dataURL.split(";base64,")[1];
        // Post the base64 encoded content to the server which can save it.
        $.get("@Url.Action("Excel_Export_Save", "Schedule")", {
            contentType: "application/ms-excel",
            base64: base64,
            fileName: "ExcelExport.xlsx"
        }, function (data) { console.log(data);});

    }*@

</script>