<div style="width: 90%; margin: 100px auto 100px; min-height:600px;">
    <h3 class="section-title capitalize">RECORDS RETENTION SCHEDULE</h3>


    @Html.ActionLink("Add Record", "Create", "Schedule", routeValues: null, htmlAttributes : new { @class = "button" })
    <br/>

    @(Html.Kendo().Grid<IUERM_RRS.ViewModels.ScheduleViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.SCH_StewardDomain);
            columns.Bound(c => c.SCH_RetentionArea);
            columns.Bound(c => c.SCH_RetentionSubArea);
            columns.Bound(c => c.SCH_RetentionAreaDescription);
            columns.Bound(c => c.SCH_Type);
            columns.Bound(c => c.SCH_Coordinator);
            columns.Bound(c => c.SCH_RecordSeries);
            columns.Bound(c => c.SCH_RecordSeriesCode);
            columns.Bound(c => c.SCH_Description);
            columns.Bound(c => c.SCH_Active);
            columns.Bound(c => c.SCH_Vital);
            columns.Bound(c => c.SCH_Reason);
            columns.Bound(c => c.SCH_ID).ClientTemplate(@Html.ActionLink("Edit", "Edit", "Schedule", routeValues: new { Id = "#=SCH_ID#" }, htmlAttributes: new { @class = "button" }).ToHtmlString());
        })
        .ToolBar(toolbar =>
        {
            toolbar.Excel();
            toolbar.Pdf();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        .Navigatable()
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.SingleColumn);
        })
        .Filterable()
        .Scrollable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.SCH_ID))
            .Read(read => read.Action("Schedules_Read", "Schedule"))
            .Create(create => create.Action("Schedules_Create", "Schedule"))
            .Update(update => update.Action("Schedules_Update", "Schedule"))
            .Destroy(destroy => destroy.Action("Schedules_Destroy", "Schedule"))
        )
    )

</div>
