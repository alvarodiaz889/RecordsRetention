@model IUERM_RRS.ViewModels.ScheduleViewModel

<div style="width: 60%; margin: 100px auto;" role="form">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3>Create a new Schedule Record</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_Type, Model.Types)
                    @Html.ValidationMessageFor(model => model.SCH_Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_AreaScopeId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_AreaScope"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_AreaScopeId, Model.AreaScopes, "-- Select Option --", htmlAttributes: new { @id = "_AreaScope", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_AreaScopeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_RetentionArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_RetentionArea, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_RetentionArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_RetentionSubArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_RetentionSubArea, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_RetentionSubArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_RetentionAreaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_RetentionAreaDescription, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_RetentionAreaDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_RecordSeriesCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_RecordSeriesCode, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_RecordSeriesCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_RecordSeries, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_RecordSeries, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_RecordSeries, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_Description, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_Vital, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_Vital, Model.IsVital, new { @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_Vital, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_EventCodeId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_EventCode"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_EventCodeId, Model.EventCodes, "-- Select Option --", htmlAttributes: new { @id = "_EventCode", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_EventCodeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_Years, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_Years, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_Years, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_DispositionId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_DispositionOption"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_DispositionId, Model.DispositionOptions, "-- Select Option --", htmlAttributes: new { @id = "_DispositionOption", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_DispositionId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_RetentionId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_Retention"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_RetentionId, Model.Retentions, "-- Select Option --", htmlAttributes: new { @id = "_Retention", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_RetentionId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-multiselect">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.GoverningStatutesMultiSelect, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_GoverningStatute"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.ListBoxFor(o => Model.GoverningStatuteIds, Model.GoverningStatutesMultiSelect, new { @id = "_GoverningStatute", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.GoverningStatutesMultiSelect, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-multiselect">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.GoverningRegulationsMultiSelect, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_GoverningRegulation"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.ListBoxFor(o => Model.GoverningRegulationIds, Model.GoverningRegulationsMultiSelect, new { @id = "_GoverningRegulation", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.GoverningRegulationsMultiSelect, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-multiselect">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.GoverningPoliciesMultiSelect, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_GoverningPolicy"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.ListBoxFor(o => Model.GoverningPolicyIds, Model.GoverningPoliciesMultiSelect, new { @id = "_GoverningPolicy", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.GoverningPoliciesMultiSelect, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_Reason, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_Reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_RecordMediumId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_OfficialRecordMedium"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_RecordMediumId, Model.OfficialRecordMediums, "-- Select Option --", htmlAttributes: new { @id = "_OfficialRecordMedium", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_RecordMediumId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_OfficeId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_OfficeOfRecord"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_OfficeId, Model.OfficeOfRecords, "-- Select Option --", htmlAttributes: new { @id = "_OfficeOfRecord", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_OfficeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_RetainerId, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                    <a href="javascript:void(0);" class="edit-data" data-id="_Retainer"> (Edit Drop-Down List)</a>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_RetainerId, Model.Retainers, "-- Select Option --", htmlAttributes: new { @id = "_Retainer", @style = "margin:0" })
                    @Html.ValidationMessageFor(model => model.SCH_RetainerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display:inline;">
                    @Html.LabelFor(model => model.SCH_RequiresCertDestruction, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline" })
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(o => Model.SCH_RequiresCertDestruction, Model.RequireDestructionOpt,htmlAttributes: new { @style = "margin:0" }) 
                    @Html.ValidationMessageFor(model => model.SCH_RequiresCertDestruction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_Coordinator, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_Coordinator, new { htmlAttributes = new { @class = "form-control", @style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_Coordinator, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SCH_StewardDomain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SCH_StewardDomain, new { htmlAttributes = new { @class = "form-control" ,@style = "margin:0" } })
                    @Html.ValidationMessageFor(model => model.SCH_StewardDomain, "", new { @class = "text-danger" })
                </div>
            </div>

            
            <div class="form-group-last">
                <div>
                    <input type="submit" value="Create" class="button" />
                </div>
            </div>
        </div>
    }
    <br />
    <hr />
    <br />
    <br />
    <div>
        @Html.ActionLink("Back to List", "Grid", "Schedule", routeValues: null, htmlAttributes: new { @class = "button" })
    </div>
</div>
<div id='myModal' class='modal' style="display:none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'>

            </div>
            <div style="width:50%; margin:10px auto">
                <button class="button closebtn" partialName="">Go back</button>
            </div>
        </div>
    </div>

</div>

@section scripts {
    <script>

        var TeamDetailPostBackURL = '/Schedule/GetPartial';
        $(function () {
            $(".edit-data").click(function () {

                var $buttonClicked = $(this);
                var partial = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $(".closebtn").attr("partialName",partial);
                $.ajax({
                    type: "GET",
                    url: TeamDetailPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "partial": partial },
                    datatype: "json",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal(options);
                        $('#myModal').modal('show');
                        $('#myModal').addClass('popUp');
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });

            $(".closebtn").click(function () {
                $('#myModal').modal('hide');
                var partialName = $(".closebtn").attr("partialName");
                UpdateDDL(partialName);
            });

        });

        function UpdateDDL(ddlName)
        {
            var optionsSelect = $("#"+ ddlName);
            optionsSelect.empty();
            $.getJSON('@Url.Action("GetDDLUpdated","Schedule")', { name: ddlName }, function (items) {
                if (items != null && !jQuery.isEmptyObject(items))
                {
                    $.each(items, function (index, item) {
                        optionsSelect.append($('<option/>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                };
            });
        }

    </script>
}




